{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\OS_project\\\\2048-animated\\\\src\\\\components\\\\Tile.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tile = ({\n  tile\n}) => {\n  let classArray = ['tile'];\n  classArray.push('tile' + tile.value);\n  if (!tile.mergedInto) {\n    classArray.push(`position_${tile.row}_${tile.column}`);\n  }\n  if (tile.mergedInto) {\n    classArray.push('merged');\n  }\n  if (tile.isNew()) {\n    classArray.push('new');\n  }\n  if (tile.hasMoved()) {\n    classArray.push(`row_from_${tile.fromRow()}_to_${tile.toRow()}`);\n    classArray.push(`row_from_${tile.fromColumn()}_to_${tile.toColumn()}`);\n    classArray.push('isMoving');\n  }\n  let classes = classArray.join(' ');\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n_c = Tile;\nexport default Tile;\nvar _c;\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Tile","tile","classArray","push","value","mergedInto","row","column","isNew","hasMoved","fromRow","toRow","fromColumn","toColumn","classes","join","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/OS_project/2048-animated/src/components/Tile.js"],"sourcesContent":["import React from \"react\";\r\n\r\n\r\nconst Tile = ({tile}) => {\r\n    let classArray = ['tile'];\r\n    classArray.push('tile'+tile.value);\r\n    if(!tile.mergedInto){\r\n        classArray.push(`position_${tile.row}_${tile.column}`);\r\n    }\r\n    if(tile.mergedInto){\r\n        classArray.push('merged');\r\n    }\r\n    if(tile.isNew()){\r\n        classArray.push('new');\r\n    }\r\n    if(tile.hasMoved()){\r\n        classArray.push(`row_from_${tile.fromRow()}_to_${tile.toRow()}`);\r\n        classArray.push(`row_from_${tile.fromColumn()}_to_${tile.toColumn()}`);\r\n        classArray.push('isMoving');\r\n\r\n    }\r\n\r\n    let classes = classArray.join(' ');\r\n    return <span className={classes}></span>;\r\n};\r\n\r\nexport default Tile"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,IAAI,GAAGA,CAAC;EAACC;AAAI,CAAC,KAAK;EACrB,IAAIC,UAAU,GAAG,CAAC,MAAM,CAAC;EACzBA,UAAU,CAACC,IAAI,CAAC,MAAM,GAACF,IAAI,CAACG,KAAK,CAAC;EAClC,IAAG,CAACH,IAAI,CAACI,UAAU,EAAC;IAChBH,UAAU,CAACC,IAAI,CAAC,YAAYF,IAAI,CAACK,GAAG,IAAIL,IAAI,CAACM,MAAM,EAAE,CAAC;EAC1D;EACA,IAAGN,IAAI,CAACI,UAAU,EAAC;IACfH,UAAU,CAACC,IAAI,CAAC,QAAQ,CAAC;EAC7B;EACA,IAAGF,IAAI,CAACO,KAAK,CAAC,CAAC,EAAC;IACZN,UAAU,CAACC,IAAI,CAAC,KAAK,CAAC;EAC1B;EACA,IAAGF,IAAI,CAACQ,QAAQ,CAAC,CAAC,EAAC;IACfP,UAAU,CAACC,IAAI,CAAC,YAAYF,IAAI,CAACS,OAAO,CAAC,CAAC,OAAOT,IAAI,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC;IAChET,UAAU,CAACC,IAAI,CAAC,YAAYF,IAAI,CAACW,UAAU,CAAC,CAAC,OAAOX,IAAI,CAACY,QAAQ,CAAC,CAAC,EAAE,CAAC;IACtEX,UAAU,CAACC,IAAI,CAAC,UAAU,CAAC;EAE/B;EAEA,IAAIW,OAAO,GAAGZ,UAAU,CAACa,IAAI,CAAC,GAAG,CAAC;EAClC,oBAAOhB,OAAA;IAAMiB,SAAS,EAAEF;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO,CAAC;AAC5C,CAAC;AAACC,EAAA,GArBIrB,IAAI;AAuBV,eAAeA,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}