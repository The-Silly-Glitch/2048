{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\OS_project\\\\2048-animated\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tile from './Tile';\nimport Cell from './Cell';\nimport { Board } from \"../helper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardView = () => {\n  _s();\n  const [board, setBoard] = useState(new Board());\n  const cells = board.cells.map((row, rowIndex) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row.map((col, colIndex) => {\n        return /*#__PURE__*/_jsxDEV(Cell, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  });\n  const tiles = board.tiles.filter(tile => tile.value !== 0).map((tile, index) => {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      tile: tile\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [cells, tiles]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n};\n_s(BoardView, \"isIvJnjMcerelKp6kSunvGYrqE0=\");\n_c = BoardView;\nexport default BoardView;\nvar _c;\n$RefreshReg$(_c, \"BoardView\");","map":{"version":3,"names":["React","useState","Tile","Cell","Board","jsxDEV","_jsxDEV","BoardView","_s","board","setBoard","cells","map","row","rowIndex","children","col","colIndex","fileName","_jsxFileName","lineNumber","columnNumber","tiles","filter","tile","value","index","className","_c","$RefreshReg$"],"sources":["D:/Projects/OS_project/2048-animated/src/components/Board.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Tile from './Tile';\r\nimport Cell from './Cell';\r\nimport { Board } from \"../helper\";\r\n\r\n\r\nconst BoardView = () => {\r\n    const [board, setBoard] = useState(new Board());\r\n\r\n    const cells = board.cells.map((row,rowIndex)=>{\r\n        return (\r\n            <div>\r\n                {row.map((col,colIndex) => {\r\n                    return <Cell />;\r\n                })}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const tiles = board.tiles.filter((tile)=>tile.value !== 0).map((tile,index)=>{\r\n        return <Tile tile={tile} key={index} />\r\n    })\r\n\r\n\r\n    return <div>\r\n        <div className=\"board\">\r\n            {cells}\r\n            {tiles}\r\n        </div>\r\n    </div>\r\n\r\n};\r\n\r\nexport default BoardView;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,KAAK,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAIG,KAAK,CAAC,CAAC,CAAC;EAE/C,MAAMO,KAAK,GAAGF,KAAK,CAACE,KAAK,CAACC,GAAG,CAAC,CAACC,GAAG,EAACC,QAAQ,KAAG;IAC1C,oBACIR,OAAA;MAAAS,QAAA,EACKF,GAAG,CAACD,GAAG,CAAC,CAACI,GAAG,EAACC,QAAQ,KAAK;QACvB,oBAAOX,OAAA,CAACH,IAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACnB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAEd,CAAC,CAAC;EAEF,MAAMC,KAAK,GAAGb,KAAK,CAACa,KAAK,CAACC,MAAM,CAAEC,IAAI,IAAGA,IAAI,CAACC,KAAK,KAAK,CAAC,CAAC,CAACb,GAAG,CAAC,CAACY,IAAI,EAACE,KAAK,KAAG;IACzE,oBAAOpB,OAAA,CAACJ,IAAI;MAACsB,IAAI,EAAEA;IAAK,GAAME,KAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC3C,CAAC,CAAC;EAGF,oBAAOf,OAAA;IAAAS,QAAA,eACHT,OAAA;MAAKqB,SAAS,EAAC,OAAO;MAAAZ,QAAA,GACjBJ,KAAK,EACLW,KAAK;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACb,EAAA,CAzBID,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA2Bf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}