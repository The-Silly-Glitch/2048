{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\OS_project\\\\2048-animated\\\\src\\\\components\\\\Board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tile from './Tile';\nimport Cell from './Cell';\nimport { Board } from \"../helper\";\nimport useEvent from \"../helper/hooks/useEvent\";\nimport GameOverlay from \"./GameOverlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardView = () => {\n  _s();\n  const [board, setBoard] = useState(new Board());\n  const handleKeyDown = event => {\n    if (board.hasWon()) {\n      return;\n    }\n    if (event.keyCode >= 37 && event.keyCode <= 40) {\n      let direction = event.keyCode - 37;\n      let boardClone = Object.assign(Object.create(Object.getPrototypeOf(board)), board);\n      let newBoard = boardClone.move(direction);\n      setBoard(newBoard);\n    }\n  };\n  useEvent('keydown', handleKeyDown);\n  const cells = board.cells.map((row, rowIndex) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: row.map((col, colIndex) => {\n        return /*#__PURE__*/_jsxDEV(Cell, {}, rowIndex * board.size + colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 28\n        }, this);\n      })\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  });\n  const tiles = board.tiles.filter(tile => tile.value !== 0).map((tile, index) => {\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      tile: tile\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this);\n  });\n  const resetGame = () => {\n    setBoard(new Board());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      classNme: \"details-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resetButton\",\n        onClick: resetGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-header\",\n          children: \"SCORE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"dive\", {\n          children: board.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [cells, tiles, /*#__PURE__*/_jsxDEV(GameOverlay, {\n        onRestart: resetGame,\n        board: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), JSON.stringify(board.hasLost())]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n_s(BoardView, \"A107XT3o2FahMcg/61oYRWSixok=\", false, function () {\n  return [useEvent];\n});\n_c = BoardView;\nexport default BoardView;\nvar _c;\n$RefreshReg$(_c, \"BoardView\");","map":{"version":3,"names":["React","useState","Tile","Cell","Board","useEvent","GameOverlay","jsxDEV","_jsxDEV","BoardView","_s","board","setBoard","handleKeyDown","event","hasWon","keyCode","direction","boardClone","Object","assign","create","getPrototypeOf","newBoard","move","cells","map","row","rowIndex","children","col","colIndex","size","fileName","_jsxFileName","lineNumber","columnNumber","tiles","filter","tile","value","index","resetGame","classNme","className","onClick","score","onRestart","JSON","stringify","hasLost","_c","$RefreshReg$"],"sources":["D:/Projects/OS_project/2048-animated/src/components/Board.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Tile from './Tile';\r\nimport Cell from './Cell';\r\nimport { Board } from \"../helper\";\r\nimport useEvent from \"../helper/hooks/useEvent\";\r\nimport GameOverlay from \"./GameOverlay\";\r\n\r\n\r\nconst BoardView = () => {\r\n    const [board, setBoard] = useState(new Board());\r\n    const handleKeyDown = (event) => {\r\n        if(board.hasWon()){\r\n            return;\r\n        }\r\n        if(event.keyCode>=37 && event.keyCode<=40){\r\n            let direction = event.keyCode - 37;\r\n            let boardClone = Object.assign(Object.create(Object.getPrototypeOf(board)), board)\r\n            let newBoard = boardClone.move(direction);\r\n            setBoard(newBoard);\r\n\r\n        }\r\n    }\r\n\r\n    useEvent('keydown',handleKeyDown);\r\n\r\n\r\n\r\n    const cells = board.cells.map((row,rowIndex)=>{\r\n        return (\r\n            <div key={rowIndex}>\r\n                {row.map((col,colIndex) => {\r\n                    return <Cell key={rowIndex * board.size +colIndex} />;\r\n                })}\r\n            </div>\r\n        );\r\n    });\r\n\r\n    const tiles = board.tiles.filter((tile)=>tile.value !== 0).map((tile,index)=>{\r\n        return <Tile tile={tile} key={index} />\r\n    })\r\n\r\n    const resetGame = () => {\r\n        setBoard(new Board())\r\n    }\r\n\r\n\r\n    return <div>\r\n        <div classNme = \"details-box\">\r\n            <div className=\"resetButton\" onClick={resetGame}>New Game</div>\r\n            <div className={\"score-box\"}>\r\n                <div className=\"score-header\">SCORE</div>\r\n                <dive>{board.score}</dive>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"board\">\r\n            {cells}\r\n            {tiles}\r\n            <GameOverlay onRestart={resetGame} board={board} />\r\n        </div>\r\n        {JSON.stringify(board.hasLost())}\r\n    </div>\r\n\r\n};\r\n\r\nexport default BoardView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}